#!/usr/bin/env node

require('dotenv').config();

const http = require('http');
const debug = require('debug')('api-server:server');
const db = require('@justdapps/data-mongodb');
const app = require('../app');

/**
 * Normalize a port into a number, string, or false.
 */
const normalizePort = (val) => {
  const intPort = parseInt(val, 10);

  if (Number.isNaN(intPort)) {
    // named pipe
    return val;
  }

  if (intPort >= 0) {
    // port number
    return intPort;
  }

  return false;
};

/**
 * Start the server on successful db connection
 */
db.connect(process.env.DB_PATH)
  .then(() => {
    const port = normalizePort(process.env.PORT || '3001');
    app.set('port', port);

    const server = http.createServer(app);

    const onError = (error) => {
      if (error.syscall !== 'listen') {
        throw error;
      }

      const bind = typeof port === 'string'
        ? `Pipe ${port}`
        : `Port ${port}`;

      // handle specific listen errors with friendly messages
      switch (error.code) {
        case 'EACCES':
          console.error(`${bind} requires elevated privileges`);
          process.exit(1);
          break;
        case 'EADDRINUSE':
          console.error(`${bind} is already in use`);
          process.exit(1);
          break;
        default:
          throw error;
      }
    };

    const onListening = () => {
      const addr = server.address();
      const bind = typeof addr === 'string'
        ? `pipe ${addr}`
        : `port ${addr.port}`;
      debug(`Listening on  ${bind}`);
    };

    server.listen(port);
    server.on('error', onError);
    server.on('listening', onListening);
  })
  .catch((err) => console.log(err));
